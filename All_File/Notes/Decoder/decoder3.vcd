$date
	Tue Jun 14 11:36:24 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! y [7:0] $end
$var reg 3 " a [2:0] $end
$var reg 1 # en $end
$scope module a1 $end
$var wire 3 $ a [2:0] $end
$var wire 1 # en $end
$var wire 8 % y [7:0] $end
$var wire 3 & w [2:0] $end
$scope module a1 $end
$var wire 2 ' a [1:0] $end
$var wire 1 ( en $end
$var wire 4 ) y [3:0] $end
$var wire 2 * w [1:0] $end
$upscope $end
$scope module a2 $end
$var wire 2 + a [1:0] $end
$var wire 1 , en $end
$var wire 4 - y [3:0] $end
$var wire 2 . w [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
b0 -
0,
bx +
bx *
b0 )
0(
bx '
b0x &
b0 %
bx $
0#
bx "
b0 !
$end
#5
b11 *
b11 .
b1 )
b1 !
b1 %
b0 -
1(
0,
b0 '
b0 +
b11 &
b0 "
b0 $
1#
#10
b10 *
b10 !
b10 %
b10 )
b10 .
b1 '
b1 +
b1 "
b1 $
#15
b1 *
b100 !
b100 %
b100 )
b1 .
b10 '
b10 +
b10 "
b10 $
#20
b0 *
b1000 !
b1000 %
b1000 )
b0 .
b11 '
b11 +
b11 "
b11 $
#25
0(
b1 -
1,
b11 *
b10000 !
b10000 %
b0 )
b11 .
b100 &
b0 '
b0 +
b100 "
b100 $
#30
b10 *
b10 .
b100000 !
b100000 %
b10 -
b1 '
b1 +
b101 "
b101 $
#35
b1 *
b1 .
b1000000 !
b1000000 %
b100 -
b10 '
b10 +
b110 "
b110 $
#40
b0 *
b0 .
b10000000 !
b10000000 %
b1000 -
b11 '
b11 +
b111 "
b111 $
#45
