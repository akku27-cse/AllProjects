$date
	Tue Jun 14 11:38:05 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 16 ! y [15:0] $end
$var reg 4 " a [3:0] $end
$var reg 1 # en $end
$scope module a1 $end
$var wire 4 $ a [3:0] $end
$var wire 1 # en $end
$var wire 16 % y [15:0] $end
$var wire 3 & w [2:0] $end
$scope module a1 $end
$var wire 3 ' a [2:0] $end
$var wire 1 ( en $end
$var wire 8 ) y [7:0] $end
$var wire 3 * w [2:0] $end
$scope module a1 $end
$var wire 2 + a [1:0] $end
$var wire 1 , en $end
$var wire 4 - y [3:0] $end
$var wire 2 . w [1:0] $end
$upscope $end
$scope module a2 $end
$var wire 2 / a [1:0] $end
$var wire 1 0 en $end
$var wire 4 1 y [3:0] $end
$var wire 2 2 w [1:0] $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 3 3 a [2:0] $end
$var wire 1 4 en $end
$var wire 8 5 y [7:0] $end
$var wire 3 6 w [2:0] $end
$scope module a1 $end
$var wire 2 7 a [1:0] $end
$var wire 1 8 en $end
$var wire 4 9 y [3:0] $end
$var wire 2 : w [1:0] $end
$upscope $end
$scope module a2 $end
$var wire 2 ; a [1:0] $end
$var wire 1 < en $end
$var wire 4 = y [3:0] $end
$var wire 2 > w [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >
bx =
x<
bx ;
bx :
bx 9
x8
bx 7
bx 6
bx 5
x4
bx 3
bx 2
b0 1
00
bx /
bx .
b0 -
0,
bx +
b0x *
b0 )
0(
bx '
b0x &
bx00000000 %
bx $
0#
bx "
bx00000000 !
$end
#5
b1 )
b1 -
b11 .
b11 2
b11 :
b11 >
b0 9
b1 !
b1 %
b0 5
b0 =
1,
08
0<
b11 *
b0 +
b0 /
b0 7
b0 ;
b1 6
1(
b0 '
b0 3
04
b11 &
b0 "
b0 $
1#
#10
b10 .
b10 !
b10 %
b10 )
b10 -
b10 2
b10 :
b10 >
b1 +
b1 /
b1 7
b1 ;
b1 '
b1 3
b1 "
b1 $
#15
b1 .
b100 !
b100 %
b100 )
b100 -
b1 2
b1 :
b1 >
b10 +
b10 /
b10 7
b10 ;
b10 '
b10 3
b10 "
b10 $
#20
b0 .
b1000 !
b1000 %
b1000 )
b1000 -
b0 2
b0 :
b0 >
b11 +
b11 /
b11 7
b11 ;
b11 '
b11 3
b11 "
b11 $
#25
0,
b1 1
10
b11 .
b10000 !
b10000 %
b10000 )
b0 -
b11 2
b11 :
b11 >
b100 *
b0 6
b0 +
b0 /
b0 7
b0 ;
b100 '
b100 3
b100 "
b100 $
#30
b10 .
b10 2
b100000 !
b100000 %
b100000 )
b10 1
b10 :
b10 >
b1 +
b1 /
b1 7
b1 ;
b101 '
b101 3
b101 "
b101 $
#35
b1 .
b1 2
b1000000 !
b1000000 %
b1000000 )
b100 1
b1 :
b1 >
b10 +
b10 /
b10 7
b10 ;
b110 '
b110 3
b110 "
b110 $
#40
b0 .
b0 2
b10000000 !
b10000000 %
b10000000 )
b1000 1
b0 :
b0 >
b11 +
b11 /
b11 7
b11 ;
b111 '
b111 3
b111 "
b111 $
#45
b0 -
b1 5
b1 9
0,
18
0(
00
b11 .
b11 2
b100000000 !
b100000000 %
b0 )
b0 1
b11 :
b11 >
b1 *
0<
b100 &
b0 +
b0 /
b0 7
b0 ;
b11 6
b0 '
b0 3
14
b1000 "
b1000 $
#50
b10 .
b10 2
b10 :
b1000000000 !
b1000000000 %
b10 5
b10 9
b10 >
b1 +
b1 /
b1 7
b1 ;
b1 '
b1 3
b1001 "
b1001 $
#55
b1 .
b1 2
b1 :
b10000000000 !
b10000000000 %
b100 5
b100 9
b1 >
b10 +
b10 /
b10 7
b10 ;
b10 '
b10 3
b1010 "
b1010 $
#60
b0 .
b0 2
b0 :
b100000000000 !
b100000000000 %
b1000 5
b1000 9
b0 >
b11 +
b11 /
b11 7
b11 ;
b11 '
b11 3
b1011 "
b1011 $
#65
08
b1 =
b11 .
b11 2
1<
b11 :
b1000000000000 !
b1000000000000 %
b10000 5
b0 9
b11 >
b0 *
b100 6
b0 +
b0 /
b0 7
b0 ;
b100 '
b100 3
b1100 "
b1100 $
#70
b10 .
b10 2
b10 :
b10 >
b10000000000000 !
b10000000000000 %
b100000 5
b10 =
b1 +
b1 /
b1 7
b1 ;
b101 '
b101 3
b1101 "
b1101 $
#75
b1 .
b1 2
b1 :
b1 >
b100000000000000 !
b100000000000000 %
b1000000 5
b100 =
b10 +
b10 /
b10 7
b10 ;
b110 '
b110 3
b1110 "
b1110 $
#80
b0 .
b0 2
b0 :
b0 >
b1000000000000000 !
b1000000000000000 %
b10000000 5
b1000 =
b11 +
b11 /
b11 7
b11 ;
b111 '
b111 3
b1111 "
b1111 $
#85
